{"version":3,"sources":["redux/items/items-actions.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","components/NavBar/NavBar.module.css","components/UserMenu/UserMenu.module.css","redux/filter/filter-actions.js","redux/auth/auth-actions.js","components/Container/Container.js","components/Container/Container.module.css","redux/items/items-reducer.js","redux/filter/filter-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/NavBar/NavBar.js","App.js","index.js"],"names":["fetchAllContactsRequest","createAction","fetchAllContactsSuccess","fetchAllContactsError","addNewContactRequest","addNewContactSuccess","addNewContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getAuthUserEmail","state","auth","user","email","getAuthUserName","name","getAuthIsLoggedIn","isLoggedIn","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","userData","dispatch","a","registerRequest","post","response","console","log","data","registerSuccess","message","registerError","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","changeFilter","Container","children","className","s","container","itemsReduser","createReducer","payload","filter","contact","id","isLoadingReduser","filterReduser","_","userReducer","tokenReducer","isLoggedInReducer","isFetchingCurrentUserReduser","authReduser","combineReducers","isFetchingCurrentUser","authPersistConfig","key","storage","whitelist","contactsReduser","items","isLoading","rootReducer","contacts","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","persistor","persistStore","PrivateRoute","redirectTo","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","connect","isLoggedin","exact","link","activeClassName","activeLink","onLogoutSubmit","value","type","onClick","e","preventDefault","handleLogout","AuthNav","header","navlink","title","HomeView","lazy","ContactsView","LoginView","RegisterView","onGetCurrentUser","useEffect","fallback","path","component","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dfd0a31d.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchAllContactsRequest = createAction(\r\n  'fetchAllContactsRequest',\r\n);\r\nexport const fetchAllContactsSuccess = createAction(\r\n  'contacts/fetchAllContactsSuccess',\r\n);\r\nexport const fetchAllContactsError = createAction(\r\n  'contacts/fetchAllContactsError',\r\n);\r\n\r\nexport const addNewContactRequest = createAction(\r\n  'addNewContactRequest',\r\n);\r\nexport const addNewContactSuccess = createAction(\r\n  'contacts/addNewContactSuccess',\r\n);\r\nexport const addNewContactError = createAction(\r\n  'contacts/addNewContactError',\r\n);\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction(\r\n  'contacts/deleteContactError',\r\n);\r\n\r\n// export const deleteContact = createAction(\r\n//   'contacts/deleteContact',\r\n// );\r\n","// import { createSelector } from 'reselect';\r\n\r\nexport const getAuthUser = state => state.auth.user;\r\nexport const getAuthUserEmail = state => state.auth.user.email;\r\nexport const getAuthUserName = state => state.auth.user.name;\r\nexport const getAuthToken = state => state.auth.token;\r\nexport const getAuthIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getAuthIsFetchingCurrentUser = state =>\r\n  state.auth.isFetchingCurrentUser;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__l6-20\",\"activeLink\":\"Navigation_activeLink__1qO27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3bPWK\",\"activeLink\":\"AuthNav_activeLink__eNpoq\"};","import axios from 'axios';\r\n\r\nimport {\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = userData => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', userData);\r\n    console.log(response);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = userData => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', userData);\r\n    console.log(response);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  console.log(persistedToken);\r\n\r\n  if (!persistedToken) {\r\n    console.log('no persisted token');\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavBar_header__iLIGi\",\"title\":\"NavBar_title__3uLu1\",\"navlink\":\"NavBar_navlink__bZGfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__H87xw\",\"email\":\"UserMenu_email__3A7bs\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('filter/changeFilter');\r\n\r\nexport default changeFilter;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// REGISTER\r\nexport const registerRequest = createAction(\r\n  'auth/registerRequest',\r\n);\r\nexport const registerSuccess = createAction(\r\n  'auth/registerSuccess',\r\n);\r\nexport const registerError = createAction(\r\n  'auth/loginError',\r\n);\r\n\r\n// LOGIN\r\nexport const loginRequest = createAction(\r\n  'auth/loginRequest',\r\n);\r\nexport const loginSuccess = createAction(\r\n  'auth/loginSuccess',\r\n);\r\nexport const loginError = createAction('auth/loginError');\r\n\r\n// LOGOUT\r\nexport const logoutRequest = createAction(\r\n  'auth/logoutRequest',\r\n);\r\nexport const logoutSuccess = createAction(\r\n  'auth/logoutSuccess',\r\n);\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\n// GET CURRENT USER\r\nexport const getCurrentUserRequest = createAction(\r\n  'auth/getCurrentUserRequest',\r\n);\r\nexport const getCurrentUserSuccess = createAction(\r\n  'auth/getCurrentUserSuccess',\r\n);\r\nexport const getCurrentUserError = createAction(\r\n  'auth/getCurrentUserError',\r\n);\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__177CQ\"};","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchAllContactsRequest,\r\n  fetchAllContactsSuccess,\r\n  fetchAllContactsError,\r\n  addNewContactRequest,\r\n  addNewContactSuccess,\r\n  addNewContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './items-actions';\r\n\r\nexport const itemsReduser = createReducer([], {\r\n  [fetchAllContactsSuccess]: (state, { payload }) =>\r\n    payload,\r\n\r\n  [addNewContactSuccess]: (state, { payload }) => {\r\n    console.log('ADD');\r\n    // if (\r\n    //   state.find(contact => contact.name === payload.name)\r\n    // ) {\r\n    //   alert(`${payload.name} is already in contacts`);\r\n    //   return state;\r\n    // } else return [payload, ...state];\r\n    return [payload, ...state];\r\n  },\r\n\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload.id),\r\n});\r\n\r\nexport const isLoadingReduser = createReducer(false, {\r\n  [fetchAllContactsRequest]: () => true,\r\n  [fetchAllContactsSuccess]: () => false,\r\n  [fetchAllContactsError]: () => false,\r\n  [addNewContactRequest]: () => true,\r\n  [addNewContactSuccess]: () => false,\r\n  [addNewContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\n// export default itemsReduser;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport changeFilter from './filter-actions';\r\n\r\nconst filterReduser = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filterReduser;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport {\r\n  loginSuccess,\r\n  logoutSuccess,\r\n  registerSuccess,\r\n  loginError,\r\n  logoutError,\r\n  registerError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\nconst userReducer = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => ({ name: null, email: null }),\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst initialTokenState = null;\r\nconst tokenReducer = createReducer(initialTokenState, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => {\r\n    console.log(payload);\r\n    return payload.token;\r\n  },\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst isLoggedInReducer = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [logoutError]: () => true,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nconst isFetchingCurrentUserReduser = createReducer(false, {\r\n  [getCurrentUserRequest]: () => true,\r\n  [getCurrentUserSuccess]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nconst authReduser = combineReducers({\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n  isLoggedIn: isLoggedInReducer,\r\n  isFetchingCurrentUser: isFetchingCurrentUserReduser,\r\n});\r\n\r\nexport default authReduser;\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport { itemsReduser, isLoadingReduser } from './items/items-reducer';\r\nimport filterReduser from './filter/filter-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\n\r\nimport {\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist/es/constants';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst contactsReduser = combineReducers({\r\n  items: itemsReduser,\r\n  filter: filterReduser,\r\n  isLoading: isLoadingReduser,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReduser,\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n});\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n// export default store;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getAuthIsLoggedIn } from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getAuthIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getAuthIsLoggedIn } from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getAuthIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { getAuthIsLoggedIn } from '../../redux/auth/auth-selectors';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = ({ isLoggedin }) => (\r\n  <nav>\r\n    <NavLink exact to=\"/\" className={s.link} activeClassName={s.activeLink}>\r\n      Home\r\n    </NavLink>\r\n\r\n    {isLoggedin && (\r\n      <NavLink to=\"/contacts\" className={s.link} activeClassName={s.activeLink}>\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedin: getAuthIsLoggedIn(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Navigation);\r\n","import React from 'react';\r\n// import { useSelector } from 'react-redux';\r\n\r\nimport s from './UserMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { getAuthUserEmail } from '../../redux/auth/auth-selectors';\r\nimport { logout } from '../../redux/auth/auth-operations';\r\n\r\nfunction UserMenu({ email, onLogoutSubmit }) {\r\n  // const email = useSelector(getAuthUserEmail);\r\n\r\n  const handleLogout = e => {\r\n    e.preventDefault();\r\n    onLogoutSubmit();\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <span className={s.email}>Email: {email} </span>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success\"\r\n        onClick={e => handleLogout(e)}\r\n      >\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    email: getAuthUserEmail(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogoutSubmit: value => dispatch(logout(value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <nav>\r\n    <NavLink to=\"/register\" className={s.link} activeClassName={s.activeLink}>\r\n      Register\r\n    </NavLink>\r\n\r\n    <NavLink to=\"/login\" className={s.link} activeClassName={s.activeLink}>\r\n      Login\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Navigation from '../Navigation/';\r\nimport s from './NavBar.module.css';\r\n\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { getAuthIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nfunction NavBar({ isLoggedIn }) {\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      <NavLink className={s.navlink} exact to=\"/\">\r\n        <h1 className={s.title}>Phonebook</h1>\r\n      </NavLink>\r\n\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { isLoggedIn: getAuthIsLoggedIn(state) };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(NavBar);\r\n","import { useEffect, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Container from './components/Container';\n// import HomeView from './views/HomeView';\n// import ContactsView from './views/ContactsView';\n// import LoginView from './views/LoginView';\n// import RegisterView from './views/RegisterView';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\n\nfunction App({ onGetCurrentUser }) {\n  useEffect(() => {\n    onGetCurrentUser();\n  }, [onGetCurrentUser]);\n\n  return (\n    <Container>\n      <NavBar />\n\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <Route exact path=\"/\" component={HomeView} />\n          <PrivateRoute path=\"/contacts\" component={ContactsView} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterView}\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginView}\n          />\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetCurrentUser: value => dispatch(getCurrentUser(value)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}