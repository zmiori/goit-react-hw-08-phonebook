{"version":3,"sources":["components/AddContactForm/AddContactForm.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","connect","dispatch","onSubmitLogin","login","useState","password","setPassword","email","setEmail","className","s","wrapper","onSubmit","e","preventDefault","handleSubmit","autoComplete","formItem","placeholder","type","name","onChange","currentTarget","handleEmailChange","handlePasswordChange","formBtn"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,SAAW,iCAAiC,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,8ECGrM,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iGI2EvFC,sBAAQ,MANI,SAAAC,GACzB,MAAO,CACLC,cAAe,SAAAP,GAAK,OAAIM,EAASE,YAAMR,QAI5BK,EAzEf,YAAuC,IAAlBE,EAAiB,EAAjBA,cAAiB,EACJE,mBAAS,IADL,mBAC7BC,EAD6B,KACnBC,EADmB,OAEVF,mBAAS,IAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,KA0BpC,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,oBAAIF,UAAU,YAAd,mBAEA,uBACEA,UAAWC,IAAEC,QACbC,SAAU,SAAAC,GAAC,OAlBI,SAAAA,GACnBA,EAAEC,iBAMFZ,EALa,CACXK,QACAF,aAIFC,EAAY,IACZE,EAAS,IASUO,CAAaF,IAC5BG,aAAa,MAHf,UAKE,wBAAOP,UAAWC,IAAEO,SAApB,kBAEE,uBACER,UAAU,eACVS,YAAY,QACZC,KAAK,QACLC,KAAK,QACLzB,MAAOY,EACPc,SAAU,SAAAR,GAAC,OAlCK,SAAAA,GAExB,OADAL,EAASK,EAAES,cAAc3B,OAClBY,EAgCgBgB,CAAkBV,SAIrC,wBAAOJ,UAAWC,IAAEO,SAApB,qBAEE,uBACER,UAAU,eACVS,YAAY,WACZC,KAAK,WACLC,KAAK,WACLzB,MAAOU,EACPgB,SAAU,SAAAR,GAAC,OAnDQ,SAAAA,GAE3B,OADAP,EAAYO,EAAES,cAAc3B,OACrBU,EAiDgBmB,CAAqBX,SAIxC,wBAAQM,KAAK,SAASV,UAAS,0BAAqBC,IAAEe,SAAtD","file":"static/js/4.1c1efe56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"AddContactForm_addContactForm__3_MeF\",\"formItem\":\"AddContactForm_formItem__3cD10\",\"formBtn\":\"AddContactForm_formBtn__2EIUI\",\"btnText\":\"AddContactForm_btnText__2DktU\",\"wrapper\":\"AddContactForm_wrapper__3QJEn\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from '../components/AddContactForm/AddContactForm.module.css';\r\n\r\nimport { login } from '../redux/auth/auth-operations';\r\n\r\nfunction LoginView({ onSubmitLogin }) {\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handlePasswordChange = e => {\r\n    setPassword(e.currentTarget.value);\r\n    return password;\r\n  };\r\n\r\n  const handleEmailChange = e => {\r\n    setEmail(e.currentTarget.value);\r\n    return email;\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    // console.log(user);\r\n    onSubmitLogin(user);\r\n    setPassword('');\r\n    setEmail('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <h1 className=\"display-6\">Login</h1>\r\n\r\n      <form\r\n        className={s.wrapper}\r\n        onSubmit={e => handleSubmit(e)}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label className={s.formItem}>\r\n          Email\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => handleEmailChange(e)}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.formItem}>\r\n          Password\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => handlePasswordChange(e)}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={`btn btn-success ${s.formBtn}`}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitLogin: value => dispatch(login(value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView);\r\n"],"sourceRoot":""}